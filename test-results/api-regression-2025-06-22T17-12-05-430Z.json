{
  "timestamp": "2025-06-22T17:12:05.430Z",
  "testSuite": "API Regression Suite",
  "totalTests": 0,
  "passedTests": 0,
  "failedTests": 0,
  "skippedTests": 0,
  "duration": 0,
  "details": {
    "stdout": "jest-haste-map: Watchman crawl failed. Retrying once with node crawler.\n  Usually this happens when watchman isn't running. Create an empty `.watchmanconfig` file in your project's root folder or initialize a git or hg repository in your project.\n  Error: Watchman error: std::__1::system_error: open: /Users/Evgeny/Documents/Projects/AgMCP: Operation not permitted. Make sure watchman is running for this project. See https://facebook.github.io/watchman/docs/troubleshooting.\n  console.log\n    🚀 Starting API Regression Test Suite\n\n      at Object.<anonymous> (tests/api-regression-suite.test.ts:220:13)\n\n  console.log\n    📍 Testing against: http://localhost:3000\n\n      at Object.<anonymous> (tests/api-regression-suite.test.ts:221:13)\n\n  console.log\n    🚜 John Deere API: ❌ Not Connected\n\n      at Object.<anonymous> (tests/api-regression-suite.test.ts:227:13)\n\n  console.log\n    🌤️  Weather API: ✅ Available\n\n      at Object.<anonymous> (tests/api-regression-suite.test.ts:228:13)\n\n  console.log\n    📝 Using test session ID: test-session-1750612328045\n\n      at createTestSession (tests/api-regression-suite.test.ts:189:11)\n\n  console.log\n    📝 Created test session: test-session-1750612328045\n\n      at Object.<anonymous> (tests/api-regression-suite.test.ts:232:13)\n\n  console.log\n    ⏭️  Skipping John Deere test: Basic field count query (not connected)\n\n      at tests/api-regression-suite.test.ts:245:17\n\n  console.log\n    ⏭️  Skipping John Deere test: Equipment listing query (not connected)\n\n      at tests/api-regression-suite.test.ts:245:17\n\n  console.log\n    ⏭️  Skipping John Deere test: Organization listing query (not connected)\n\n      at tests/api-regression-suite.test.ts:245:17\n\n  console.log\n    ⏭️  Skipping John Deere test: Operations history query (not connected)\n\n      at tests/api-regression-suite.test.ts:245:17\n\n  console.log\n    ⏭️  Skipping John Deere test: Comprehensive farm data query (not connected)\n\n      at tests/api-regression-suite.test.ts:245:17\n\n  console.log\n    ⏭️  Skipping John Deere test: Field boundary data query (not connected)\n\n      at tests/api-regression-suite.test.ts:245:17\n\n  console.log\n    🌤️  Testing: What's the current weather at coordinates 41.6, -91.5?\n\n      at tests/api-regression-suite.test.ts:300:15\n\n  console.log\n    ✅ Weather test passed: Current weather query with coordinates\n\n      at tests/api-regression-suite.test.ts:337:15\n\n  console.log\n    🌤️  Testing: Give me the weather forecast for coordinates 41.6, -91.5\n\n      at tests/api-regression-suite.test.ts:300:15\n\n  console.log\n    ✅ Weather test passed: Weather forecast query with coordinates\n\n      at tests/api-regression-suite.test.ts:337:15\n\n  console.log\n    🌤️  Testing: What's the weather at latitude 41.6, longitude -91.5?\n\n      at tests/api-regression-suite.test.ts:300:15\n\n  console.log\n    ✅ Weather test passed: Location-specific weather query with coordinates\n\n      at tests/api-regression-suite.test.ts:337:15\n\n  console.log\n    🌤️  Testing: Should I spray today? Check the weather conditions\n\n      at tests/api-regression-suite.test.ts:300:15\n\n  console.log\n    ✅ Weather test passed: Spray conditions weather query without location\n\n      at tests/api-regression-suite.test.ts:337:15\n\n  console.log\n    🌤️  Testing: Get weather forecast for coordinates 41.6, -91.5\n\n      at tests/api-regression-suite.test.ts:300:15\n\n  console.log\n    ✅ Weather test passed: Coordinate-based weather forecast\n\n      at tests/api-regression-suite.test.ts:337:15\n\n  console.log\n    🌤️  Testing: What's the current weather?\n\n      at tests/api-regression-suite.test.ts:300:15\n\n  console.log\n    ✅ Weather test passed: Ambiguous weather query without location\n\n      at tests/api-regression-suite.test.ts:337:15\n\n  console.log\n    ⏭️  Skipping Combined test: Field-specific weather query (orchestrated) (missing connections)\n\n      at tests/api-regression-suite.test.ts:347:17\n\n  console.log\n    ⏭️  Skipping Combined test: Fields list with weather (missing connections)\n\n      at tests/api-regression-suite.test.ts:347:17\n\n  console.log\n    ⏭️  Skipping Combined test: Equipment and weather for operations (missing connections)\n\n      at tests/api-regression-suite.test.ts:347:17\n\n  console.log\n    ⏭️  Skipping Combined test: Farm overview with weather forecast (missing connections)\n\n      at tests/api-regression-suite.test.ts:347:17\n\n  console.log\n    ⏭️  Skipping Combined test: Field-specific spray decision query (missing connections)\n\n      at tests/api-regression-suite.test.ts:347:17\n\n  console.log\n    ⏭️  Skipping Field Weather Orchestration test (missing connections)\n\n      at Object.<anonymous> (tests/api-regression-suite.test.ts:396:17)\n\n  console.log\n    ⏭️  Skipping error handling test (John Deere not connected)\n\n      at Object.<anonymous> (tests/api-regression-suite.test.ts:436:17)\n\n  console.log\n    ✅ Weather error handling test passed\n\n      at Object.<anonymous> (tests/api-regression-suite.test.ts:472:15)\n\n  console.log\n    🏁 API Regression Test Suite completed\n\n      at Object.<anonymous> (tests/api-regression-suite.test.ts:236:13)\n\n",
    "stderr": "PASS tests/api-regression-suite.test.ts (24.677 s)\n  API Regression Test Suite\n    John Deere API Tests\n      ✓ Basic field count query (2 ms)\n      ✓ Equipment listing query (1 ms)\n      ✓ Organization listing query (1 ms)\n      ✓ Operations history query (1 ms)\n      ✓ Comprehensive farm data query (2 ms)\n      ✓ Field boundary data query (3 ms)\n    Weather API Tests\n      ✓ Current weather query with coordinates (3636 ms)\n      ✓ Weather forecast query with coordinates (4853 ms)\n      ✓ Location-specific weather query with coordinates (3178 ms)\n      ✓ Spray conditions weather query without location (2107 ms)\n      ✓ Coordinate-based weather forecast (6126 ms)\n      ✓ Ambiguous weather query without location (1933 ms)\n    Combined Multi-Source API Tests\n      ✓ Field-specific weather query (orchestrated) (3 ms)\n      ✓ Fields list with weather (1 ms)\n      ✓ Equipment and weather for operations (2 ms)\n      ✓ Farm overview with weather forecast (1 ms)\n      ✓ Field-specific spray decision query (1 ms)\n    Field Weather Orchestration\n      ✓ Field weather workflow should complete successfully (1 ms)\n    Error Handling Tests\n      ✓ Should handle invalid field names gracefully (3 ms)\n      ✓ Should handle weather API with invalid coordinates (1320 ms)\n\nTest Suites: 1 passed, 1 total\nTests:       20 passed, 20 total\nSnapshots:   0 total\nTime:        24.815 s, estimated 26 s\nRan all test suites.\n\nJest has detected the following 1 open handle potentially keeping Jest from exiting:\n\n  ●  TCPWRAP\n\n      165 | async function sendChatMessage(question: string, selectedDataSources: string[] = ['weather', 'johndeere']) {\n      166 |   // Use the test endpoint that bypasses authentication\n    > 167 |   const response = await fetch(`${BASE_URL}/api/test/chat-completion`, {\n          |                          ^\n      168 |     method: 'POST',\n      169 |     headers: {\n      170 |       'Content-Type': 'application/json',\n\n      at node_modules/node-fetch/lib/index.js:1478:15\n      at fetch (node_modules/node-fetch/lib/index.js:1447:9)\n      at sendChatMessage (tests/api-regression-suite.test.ts:167:26)\n      at Object.<anonymous> (tests/api-regression-suite.test.ts:461:28)\n\n"
  }
}