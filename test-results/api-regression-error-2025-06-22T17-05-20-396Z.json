{
  "timestamp": "2025-06-22T17:05:20.396Z",
  "testSuite": "API Regression Suite",
  "totalTests": 0,
  "passedTests": 0,
  "failedTests": 1,
  "skippedTests": 0,
  "duration": 0,
  "details": {
    "error": "Command failed: npx jest --config jest.regression.config.js --verbose --detectOpenHandles --forceExit\nFAIL tests/api-regression-suite.test.ts\n  API Regression Test Suite\n    John Deere API Tests\n      ✕ Basic field count query (1 ms)\n      ✕ Equipment listing query\n      ✕ Organization listing query\n      ✕ Operations history query (1 ms)\n      ✕ Comprehensive farm data query\n      ✕ Field boundary data query\n    Weather API Tests\n      ✕ Current weather query (1 ms)\n      ✕ Weather forecast query\n      ✕ Location-specific weather query\n      ✕ Spray conditions weather query (1 ms)\n      ✕ Coordinate-based weather forecast\n    Combined Multi-Source API Tests\n      ✕ Field-specific weather query (orchestrated)\n      ✕ Fields list with weather (1 ms)\n      ✕ Equipment and weather for operations\n      ✕ Farm overview with weather forecast\n      ✕ Field-specific spray decision query\n    Field Weather Orchestration\n      ✕ Field weather workflow should complete successfully (1 ms)\n    Error Handling Tests\n      ✕ Should handle invalid field names gracefully\n      ✕ Should handle weather API with invalid coordinates (3 ms)\n\n  ● API Regression Test Suite › John Deere API Tests › Basic field count query\n\n    Failed to create test session: 401\n\n      186 |\n      187 |   if (!response.ok) {\n    > 188 |     throw new Error(`Failed to create test session: ${response.status}`)\n          |           ^\n      189 |   }\n      190 |\n      191 |   return await response.json()\n\n      at createTestSession (tests/api-regression-suite.test.ts:188:11)\n      at Object.<anonymous> (tests/api-regression-suite.test.ts:232:5)\n\n  ● API Regression Test Suite › John Deere API Tests › Equipment listing query\n\n    Failed to create test session: 401\n\n      186 |\n      187 |   if (!response.ok) {\n    > 188 |     throw new Error(`Failed to create test session: ${response.status}`)\n          |           ^\n      189 |   }\n      190 |\n      191 |   return await response.json()\n\n      at createTestSession (tests/api-regression-suite.test.ts:188:11)\n      at Object.<anonymous> (tests/api-regression-suite.test.ts:232:5)\n\n  ● API Regression Test Suite › John Deere API Tests › Organization listing query\n\n    Failed to create test session: 401\n\n      186 |\n      187 |   if (!response.ok) {\n    > 188 |     throw new Error(`Failed to create test session: ${response.status}`)\n          |           ^\n      189 |   }\n      190 |\n      191 |   return await response.json()\n\n      at createTestSession (tests/api-regression-suite.test.ts:188:11)\n      at Object.<anonymous> (tests/api-regression-suite.test.ts:232:5)\n\n  ● API Regression Test Suite › John Deere API Tests › Operations history query\n\n    Failed to create test session: 401\n\n      186 |\n      187 |   if (!response.ok) {\n    > 188 |     throw new Error(`Failed to create test session: ${response.status}`)\n          |           ^\n      189 |   }\n      190 |\n      191 |   return await response.json()\n\n      at createTestSession (tests/api-regression-suite.test.ts:188:11)\n      at Object.<anonymous> (tests/api-regression-suite.test.ts:232:5)\n\n  ● API Regression Test Suite › John Deere API Tests › Comprehensive farm data query\n\n    Failed to create test session: 401\n\n      186 |\n      187 |   if (!response.ok) {\n    > 188 |     throw new Error(`Failed to create test session: ${response.status}`)\n          |           ^\n      189 |   }\n      190 |\n      191 |   return await response.json()\n\n      at createTestSession (tests/api-regression-suite.test.ts:188:11)\n      at Object.<anonymous> (tests/api-regression-suite.test.ts:232:5)\n\n  ● API Regression Test Suite › John Deere API Tests › Field boundary data query\n\n    Failed to create test session: 401\n\n      186 |\n      187 |   if (!response.ok) {\n    > 188 |     throw new Error(`Failed to create test session: ${response.status}`)\n          |           ^\n      189 |   }\n      190 |\n      191 |   return await response.json()\n\n      at createTestSession (tests/api-regression-suite.test.ts:188:11)\n      at Object.<anonymous> (tests/api-regression-suite.test.ts:232:5)\n\n  ● API Regression Test Suite › Weather API Tests › Current weather query\n\n    Failed to create test session: 401\n\n      186 |\n      187 |   if (!response.ok) {\n    > 188 |     throw new Error(`Failed to create test session: ${response.status}`)\n          |           ^\n      189 |   }\n      190 |\n      191 |   return await response.json()\n\n      at createTestSession (tests/api-regression-suite.test.ts:188:11)\n      at Object.<anonymous> (tests/api-regression-suite.test.ts:232:5)\n\n  ● API Regression Test Suite › Weather API Tests › Weather forecast query\n\n    Failed to create test session: 401\n\n      186 |\n      187 |   if (!response.ok) {\n    > 188 |     throw new Error(`Failed to create test session: ${response.status}`)\n          |           ^\n      189 |   }\n      190 |\n      191 |   return await response.json()\n\n      at createTestSession (tests/api-regression-suite.test.ts:188:11)\n      at Object.<anonymous> (tests/api-regression-suite.test.ts:232:5)\n\n  ● API Regression Test Suite › Weather API Tests › Location-specific weather query\n\n    Failed to create test session: 401\n\n      186 |\n      187 |   if (!response.ok) {\n    > 188 |     throw new Error(`Failed to create test session: ${response.status}`)\n          |           ^\n      189 |   }\n      190 |\n      191 |   return await response.json()\n\n      at createTestSession (tests/api-regression-suite.test.ts:188:11)\n      at Object.<anonymous> (tests/api-regression-suite.test.ts:232:5)\n\n  ● API Regression Test Suite › Weather API Tests › Spray conditions weather query\n\n    Failed to create test session: 401\n\n      186 |\n      187 |   if (!response.ok) {\n    > 188 |     throw new Error(`Failed to create test session: ${response.status}`)\n          |           ^\n      189 |   }\n      190 |\n      191 |   return await response.json()\n\n      at createTestSession (tests/api-regression-suite.test.ts:188:11)\n      at Object.<anonymous> (tests/api-regression-suite.test.ts:232:5)\n\n  ● API Regression Test Suite › Weather API Tests › Coordinate-based weather forecast\n\n    Failed to create test session: 401\n\n      186 |\n      187 |   if (!response.ok) {\n    > 188 |     throw new Error(`Failed to create test session: ${response.status}`)\n          |           ^\n      189 |   }\n      190 |\n      191 |   return await response.json()\n\n      at createTestSession (tests/api-regression-suite.test.ts:188:11)\n      at Object.<anonymous> (tests/api-regression-suite.test.ts:232:5)\n\n  ● API Regression Test Suite › Combined Multi-Source API Tests › Field-specific weather query (orchestrated)\n\n    Failed to create test session: 401\n\n      186 |\n      187 |   if (!response.ok) {\n    > 188 |     throw new Error(`Failed to create test session: ${response.status}`)\n          |           ^\n      189 |   }\n      190 |\n      191 |   return await response.json()\n\n      at createTestSession (tests/api-regression-suite.test.ts:188:11)\n      at Object.<anonymous> (tests/api-regression-suite.test.ts:232:5)\n\n  ● API Regression Test Suite › Combined Multi-Source API Tests › Fields list with weather\n\n    Failed to create test session: 401\n\n      186 |\n      187 |   if (!response.ok) {\n    > 188 |     throw new Error(`Failed to create test session: ${response.status}`)\n          |           ^\n      189 |   }\n      190 |\n      191 |   return await response.json()\n\n      at createTestSession (tests/api-regression-suite.test.ts:188:11)\n      at Object.<anonymous> (tests/api-regression-suite.test.ts:232:5)\n\n  ● API Regression Test Suite › Combined Multi-Source API Tests › Equipment and weather for operations\n\n    Failed to create test session: 401\n\n      186 |\n      187 |   if (!response.ok) {\n    > 188 |     throw new Error(`Failed to create test session: ${response.status}`)\n          |           ^\n      189 |   }\n      190 |\n      191 |   return await response.json()\n\n      at createTestSession (tests/api-regression-suite.test.ts:188:11)\n      at Object.<anonymous> (tests/api-regression-suite.test.ts:232:5)\n\n  ● API Regression Test Suite › Combined Multi-Source API Tests › Farm overview with weather forecast\n\n    Failed to create test session: 401\n\n      186 |\n      187 |   if (!response.ok) {\n    > 188 |     throw new Error(`Failed to create test session: ${response.status}`)\n          |           ^\n      189 |   }\n      190 |\n      191 |   return await response.json()\n\n      at createTestSession (tests/api-regression-suite.test.ts:188:11)\n      at Object.<anonymous> (tests/api-regression-suite.test.ts:232:5)\n\n  ● API Regression Test Suite › Combined Multi-Source API Tests › Field-specific spray decision query\n\n    Failed to create test session: 401\n\n      186 |\n      187 |   if (!response.ok) {\n    > 188 |     throw new Error(`Failed to create test session: ${response.status}`)\n          |           ^\n      189 |   }\n      190 |\n      191 |   return await response.json()\n\n      at createTestSession (tests/api-regression-suite.test.ts:188:11)\n      at Object.<anonymous> (tests/api-regression-suite.test.ts:232:5)\n\n  ● API Regression Test Suite › Field Weather Orchestration › Field weather workflow should complete successfully\n\n    Failed to create test session: 401\n\n      186 |\n      187 |   if (!response.ok) {\n    > 188 |     throw new Error(`Failed to create test session: ${response.status}`)\n          |           ^\n      189 |   }\n      190 |\n      191 |   return await response.json()\n\n      at createTestSession (tests/api-regression-suite.test.ts:188:11)\n      at Object.<anonymous> (tests/api-regression-suite.test.ts:232:5)\n\n  ● API Regression Test Suite › Error Handling Tests › Should handle invalid field names gracefully\n\n    Failed to create test session: 401\n\n      186 |\n      187 |   if (!response.ok) {\n    > 188 |     throw new Error(`Failed to create test session: ${response.status}`)\n          |           ^\n      189 |   }\n      190 |\n      191 |   return await response.json()\n\n      at createTestSession (tests/api-regression-suite.test.ts:188:11)\n      at Object.<anonymous> (tests/api-regression-suite.test.ts:232:5)\n\n  ● API Regression Test Suite › Error Handling Tests › Should handle weather API with invalid coordinates\n\n    Failed to create test session: 401\n\n      186 |\n      187 |   if (!response.ok) {\n    > 188 |     throw new Error(`Failed to create test session: ${response.status}`)\n          |           ^\n      189 |   }\n      190 |\n      191 |   return await response.json()\n\n      at createTestSession (tests/api-regression-suite.test.ts:188:11)\n      at Object.<anonymous> (tests/api-regression-suite.test.ts:232:5)\n\nTest Suites: 1 failed, 1 total\nTests:       19 failed, 19 total\nSnapshots:   0 total\nTime:        1.2 s\nRan all test suites.\n",
    "stdout": "jest-haste-map: Watchman crawl failed. Retrying once with node crawler.\n  Usually this happens when watchman isn't running. Create an empty `.watchmanconfig` file in your project's root folder or initialize a git or hg repository in your project.\n  Error: Watchman error: std::__1::system_error: open: /Users/Evgeny/Documents/Projects/AgMCP: Operation not permitted. Make sure watchman is running for this project. See https://facebook.github.io/watchman/docs/troubleshooting.\n  console.log\n    🚀 Starting API Regression Test Suite\n\n      at Object.<anonymous> (tests/api-regression-suite.test.ts:221:13)\n\n  console.log\n    📍 Testing against: http://localhost:3000\n\n      at Object.<anonymous> (tests/api-regression-suite.test.ts:222:13)\n\n  console.log\n    🚜 John Deere API: ❌ Not Connected\n\n      at Object.<anonymous> (tests/api-regression-suite.test.ts:228:13)\n\n  console.log\n    🌤️  Weather API: ✅ Available\n\n      at Object.<anonymous> (tests/api-regression-suite.test.ts:229:13)\n\n  console.log\n    🏁 API Regression Test Suite completed\n\n      at Object.<anonymous> (tests/api-regression-suite.test.ts:237:13)\n\n",
    "stderr": "FAIL tests/api-regression-suite.test.ts\n  API Regression Test Suite\n    John Deere API Tests\n      ✕ Basic field count query (1 ms)\n      ✕ Equipment listing query\n      ✕ Organization listing query\n      ✕ Operations history query (1 ms)\n      ✕ Comprehensive farm data query\n      ✕ Field boundary data query\n    Weather API Tests\n      ✕ Current weather query (1 ms)\n      ✕ Weather forecast query\n      ✕ Location-specific weather query\n      ✕ Spray conditions weather query (1 ms)\n      ✕ Coordinate-based weather forecast\n    Combined Multi-Source API Tests\n      ✕ Field-specific weather query (orchestrated)\n      ✕ Fields list with weather (1 ms)\n      ✕ Equipment and weather for operations\n      ✕ Farm overview with weather forecast\n      ✕ Field-specific spray decision query\n    Field Weather Orchestration\n      ✕ Field weather workflow should complete successfully (1 ms)\n    Error Handling Tests\n      ✕ Should handle invalid field names gracefully\n      ✕ Should handle weather API with invalid coordinates (3 ms)\n\n  ● API Regression Test Suite › John Deere API Tests › Basic field count query\n\n    Failed to create test session: 401\n\n      186 |\n      187 |   if (!response.ok) {\n    > 188 |     throw new Error(`Failed to create test session: ${response.status}`)\n          |           ^\n      189 |   }\n      190 |\n      191 |   return await response.json()\n\n      at createTestSession (tests/api-regression-suite.test.ts:188:11)\n      at Object.<anonymous> (tests/api-regression-suite.test.ts:232:5)\n\n  ● API Regression Test Suite › John Deere API Tests › Equipment listing query\n\n    Failed to create test session: 401\n\n      186 |\n      187 |   if (!response.ok) {\n    > 188 |     throw new Error(`Failed to create test session: ${response.status}`)\n          |           ^\n      189 |   }\n      190 |\n      191 |   return await response.json()\n\n      at createTestSession (tests/api-regression-suite.test.ts:188:11)\n      at Object.<anonymous> (tests/api-regression-suite.test.ts:232:5)\n\n  ● API Regression Test Suite › John Deere API Tests › Organization listing query\n\n    Failed to create test session: 401\n\n      186 |\n      187 |   if (!response.ok) {\n    > 188 |     throw new Error(`Failed to create test session: ${response.status}`)\n          |           ^\n      189 |   }\n      190 |\n      191 |   return await response.json()\n\n      at createTestSession (tests/api-regression-suite.test.ts:188:11)\n      at Object.<anonymous> (tests/api-regression-suite.test.ts:232:5)\n\n  ● API Regression Test Suite › John Deere API Tests › Operations history query\n\n    Failed to create test session: 401\n\n      186 |\n      187 |   if (!response.ok) {\n    > 188 |     throw new Error(`Failed to create test session: ${response.status}`)\n          |           ^\n      189 |   }\n      190 |\n      191 |   return await response.json()\n\n      at createTestSession (tests/api-regression-suite.test.ts:188:11)\n      at Object.<anonymous> (tests/api-regression-suite.test.ts:232:5)\n\n  ● API Regression Test Suite › John Deere API Tests › Comprehensive farm data query\n\n    Failed to create test session: 401\n\n      186 |\n      187 |   if (!response.ok) {\n    > 188 |     throw new Error(`Failed to create test session: ${response.status}`)\n          |           ^\n      189 |   }\n      190 |\n      191 |   return await response.json()\n\n      at createTestSession (tests/api-regression-suite.test.ts:188:11)\n      at Object.<anonymous> (tests/api-regression-suite.test.ts:232:5)\n\n  ● API Regression Test Suite › John Deere API Tests › Field boundary data query\n\n    Failed to create test session: 401\n\n      186 |\n      187 |   if (!response.ok) {\n    > 188 |     throw new Error(`Failed to create test session: ${response.status}`)\n          |           ^\n      189 |   }\n      190 |\n      191 |   return await response.json()\n\n      at createTestSession (tests/api-regression-suite.test.ts:188:11)\n      at Object.<anonymous> (tests/api-regression-suite.test.ts:232:5)\n\n  ● API Regression Test Suite › Weather API Tests › Current weather query\n\n    Failed to create test session: 401\n\n      186 |\n      187 |   if (!response.ok) {\n    > 188 |     throw new Error(`Failed to create test session: ${response.status}`)\n          |           ^\n      189 |   }\n      190 |\n      191 |   return await response.json()\n\n      at createTestSession (tests/api-regression-suite.test.ts:188:11)\n      at Object.<anonymous> (tests/api-regression-suite.test.ts:232:5)\n\n  ● API Regression Test Suite › Weather API Tests › Weather forecast query\n\n    Failed to create test session: 401\n\n      186 |\n      187 |   if (!response.ok) {\n    > 188 |     throw new Error(`Failed to create test session: ${response.status}`)\n          |           ^\n      189 |   }\n      190 |\n      191 |   return await response.json()\n\n      at createTestSession (tests/api-regression-suite.test.ts:188:11)\n      at Object.<anonymous> (tests/api-regression-suite.test.ts:232:5)\n\n  ● API Regression Test Suite › Weather API Tests › Location-specific weather query\n\n    Failed to create test session: 401\n\n      186 |\n      187 |   if (!response.ok) {\n    > 188 |     throw new Error(`Failed to create test session: ${response.status}`)\n          |           ^\n      189 |   }\n      190 |\n      191 |   return await response.json()\n\n      at createTestSession (tests/api-regression-suite.test.ts:188:11)\n      at Object.<anonymous> (tests/api-regression-suite.test.ts:232:5)\n\n  ● API Regression Test Suite › Weather API Tests › Spray conditions weather query\n\n    Failed to create test session: 401\n\n      186 |\n      187 |   if (!response.ok) {\n    > 188 |     throw new Error(`Failed to create test session: ${response.status}`)\n          |           ^\n      189 |   }\n      190 |\n      191 |   return await response.json()\n\n      at createTestSession (tests/api-regression-suite.test.ts:188:11)\n      at Object.<anonymous> (tests/api-regression-suite.test.ts:232:5)\n\n  ● API Regression Test Suite › Weather API Tests › Coordinate-based weather forecast\n\n    Failed to create test session: 401\n\n      186 |\n      187 |   if (!response.ok) {\n    > 188 |     throw new Error(`Failed to create test session: ${response.status}`)\n          |           ^\n      189 |   }\n      190 |\n      191 |   return await response.json()\n\n      at createTestSession (tests/api-regression-suite.test.ts:188:11)\n      at Object.<anonymous> (tests/api-regression-suite.test.ts:232:5)\n\n  ● API Regression Test Suite › Combined Multi-Source API Tests › Field-specific weather query (orchestrated)\n\n    Failed to create test session: 401\n\n      186 |\n      187 |   if (!response.ok) {\n    > 188 |     throw new Error(`Failed to create test session: ${response.status}`)\n          |           ^\n      189 |   }\n      190 |\n      191 |   return await response.json()\n\n      at createTestSession (tests/api-regression-suite.test.ts:188:11)\n      at Object.<anonymous> (tests/api-regression-suite.test.ts:232:5)\n\n  ● API Regression Test Suite › Combined Multi-Source API Tests › Fields list with weather\n\n    Failed to create test session: 401\n\n      186 |\n      187 |   if (!response.ok) {\n    > 188 |     throw new Error(`Failed to create test session: ${response.status}`)\n          |           ^\n      189 |   }\n      190 |\n      191 |   return await response.json()\n\n      at createTestSession (tests/api-regression-suite.test.ts:188:11)\n      at Object.<anonymous> (tests/api-regression-suite.test.ts:232:5)\n\n  ● API Regression Test Suite › Combined Multi-Source API Tests › Equipment and weather for operations\n\n    Failed to create test session: 401\n\n      186 |\n      187 |   if (!response.ok) {\n    > 188 |     throw new Error(`Failed to create test session: ${response.status}`)\n          |           ^\n      189 |   }\n      190 |\n      191 |   return await response.json()\n\n      at createTestSession (tests/api-regression-suite.test.ts:188:11)\n      at Object.<anonymous> (tests/api-regression-suite.test.ts:232:5)\n\n  ● API Regression Test Suite › Combined Multi-Source API Tests › Farm overview with weather forecast\n\n    Failed to create test session: 401\n\n      186 |\n      187 |   if (!response.ok) {\n    > 188 |     throw new Error(`Failed to create test session: ${response.status}`)\n          |           ^\n      189 |   }\n      190 |\n      191 |   return await response.json()\n\n      at createTestSession (tests/api-regression-suite.test.ts:188:11)\n      at Object.<anonymous> (tests/api-regression-suite.test.ts:232:5)\n\n  ● API Regression Test Suite › Combined Multi-Source API Tests › Field-specific spray decision query\n\n    Failed to create test session: 401\n\n      186 |\n      187 |   if (!response.ok) {\n    > 188 |     throw new Error(`Failed to create test session: ${response.status}`)\n          |           ^\n      189 |   }\n      190 |\n      191 |   return await response.json()\n\n      at createTestSession (tests/api-regression-suite.test.ts:188:11)\n      at Object.<anonymous> (tests/api-regression-suite.test.ts:232:5)\n\n  ● API Regression Test Suite › Field Weather Orchestration › Field weather workflow should complete successfully\n\n    Failed to create test session: 401\n\n      186 |\n      187 |   if (!response.ok) {\n    > 188 |     throw new Error(`Failed to create test session: ${response.status}`)\n          |           ^\n      189 |   }\n      190 |\n      191 |   return await response.json()\n\n      at createTestSession (tests/api-regression-suite.test.ts:188:11)\n      at Object.<anonymous> (tests/api-regression-suite.test.ts:232:5)\n\n  ● API Regression Test Suite › Error Handling Tests › Should handle invalid field names gracefully\n\n    Failed to create test session: 401\n\n      186 |\n      187 |   if (!response.ok) {\n    > 188 |     throw new Error(`Failed to create test session: ${response.status}`)\n          |           ^\n      189 |   }\n      190 |\n      191 |   return await response.json()\n\n      at createTestSession (tests/api-regression-suite.test.ts:188:11)\n      at Object.<anonymous> (tests/api-regression-suite.test.ts:232:5)\n\n  ● API Regression Test Suite › Error Handling Tests › Should handle weather API with invalid coordinates\n\n    Failed to create test session: 401\n\n      186 |\n      187 |   if (!response.ok) {\n    > 188 |     throw new Error(`Failed to create test session: ${response.status}`)\n          |           ^\n      189 |   }\n      190 |\n      191 |   return await response.json()\n\n      at createTestSession (tests/api-regression-suite.test.ts:188:11)\n      at Object.<anonymous> (tests/api-regression-suite.test.ts:232:5)\n\nTest Suites: 1 failed, 1 total\nTests:       19 failed, 19 total\nSnapshots:   0 total\nTime:        1.2 s\nRan all test suites.\n"
  }
}